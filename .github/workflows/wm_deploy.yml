name: Backend Zip

on:
  push:
    tags:
      - 'v*'
      
permissions: write-all
  
jobs:
  zip:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the repository
      - name: Checkout Code
        uses: actions/checkout@v4

      # Step 2: Version
      - name: Get Version
        id: version
        run: |
          VERSION=${GITHUB_REF#refs/tags/}
          echo "Version is $VERSION"
          echo "VERSION=$VERSION" >> $GITHUB_ENV

      # Step 2: Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18' # Ensure compatibility with Vite
          #cache: 'npm' # Caches `node_modules` for faster builds

      # Step 3: Install dependencies
      - name: Install Dependencies
        run: |
          ls -l
          cd src/main/frontend
          npm install

      # Step 4: Build the Vite app
      - name: Build Frontend
        run: |
          cd src/main/frontend
          npm run build

      # Step 6: Create zip file of build artifacts
      - name: Zip Build Artifacts
        run: |
          cd src/main/frontend/
          rm -r ../wm/IS/packages/MessagingHub/pub/*
          mv dist/* ../wm/IS/packages/MessagingHub/pub/
          cd ../wm/IS/packages/MessagingHub
          zip -r MessagingHub.zip ./*

      # Step 7: Create release
      - name: release
        uses: actions/create-release@v1
        id: create_release
        with:
          draft: false
          prerelease: false
          release_name: "Release ${{ env.VERSION }}"
          tag_name: ${{ env.VERSION }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      # Step 9: Upload Build Artifacts to Release
      - name: Upload Artifacts to Release
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: src/main/wm/IS/packages/MessagingHub/MessagingHub.zip
          asset_name: MessagingHub.zip
          asset_content_type: application/zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
